package Seminar4;

// Задание №2
// Реализовать консольное приложение, которое:
// 1. Принимает от пользователя и “запоминает” строки.
// 2. Если введено print, выводит строки так, чтобы последняя введенная
// была первой в списке, а первая - последней.
// 3. Если введено revert, удаляет предыдущую введенную строку из памяти.

// Краткое пояснение:
// Мы используем Scanner для считывания ввода пользователя.
// LinkedList (memory) используется для хранения введенных строк.
// Мы используем бесконечный цикл while, чтобы продолжать принимать ввод от пользователя,
// пока он не введет "exit".
// В зависимости от введенной команды (print, revert) или текста,
// мы выполняем соответствующие действия.
// При вводе команды print мы выводим строки из памяти в обратном порядке.
// При вводе команды revert мы удаляем последнюю введенную строку из памяти.
// После завершения работы с приложением сканнер закрывается.

import java.util.*;

public class Main2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        LinkedList<String> memory = new LinkedList<>(); // Используем связанный список для хранения строк

        System.out.println("Введите строки. Для вывода введите 'print', для удаления предыдущей строки - 'revert', для выхода - 'exit':");

        while (true) {
            System.out.print("Введите команду или строку: ");
            String input = scanner.nextLine();

            // Проверка условия выхода из цикла
            if (input.equals("exit")) {
                break;
            } else if (input.equals("print")) {
                // Если команда - 'print', выводим строки из памяти в обратном порядке
                System.out.println("Строки в обратном порядке:");
                for (int i = memory.size() - 1; i >= 0; i--) {
                    System.out.println(memory.get(i));
                }
            } else if (input.equals("revert")) {
                // Если команда - 'revert', удаляем последнюю введенную строку из памяти
                if (!memory.isEmpty()) {
                    String removed = memory.removeLast();
                    System.out.println("Строка \"" + removed + "\" удалена из памяти.");
                } else {
                    System.out.println("Память пуста.");
                }
            } else {
                // Если введена обычная строка, добавляем её в память
                memory.add(input);
                System.out.println("Строка успешно добавлена в память.");
            }
        }

        // Закрываем сканнер после завершения работы с ним
        scanner.close();
    }
}
