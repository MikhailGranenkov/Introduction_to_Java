package Seminar5;


// Написать метод, который переведёт данное целое число в римский формат.


// Метод main:
// В методе main происходит основная логика программы.
// Сначала создается объект класса Scanner для считывания ввода пользователя с консоли.
// Затем выводится приглашение пользователю ввести целое число.
// Введенное пользователем число сохраняется в переменной number.
// После того как пользователь ввел число, вызывается метод arabicToRoman(number) для конвертации числа в римское представление.
// Если введенное число находится в диапазоне от 1 до 3999, выводится результат преобразования в римское число.
// Если введенное число находится за пределами указанного диапазона, выводится сообщение о необходимости ввода числа в правильном диапазоне.
// Метод arabicToRoman:
// Этот метод принимает целое число в качестве аргумента и возвращает его римское представление в виде строки.
// Создаются два массива: romanSymbols, содержащий римские символы, и romanValues, содержащий соответствующие им числовые значения.
// Создается объект StringBuilder для построения результата.
// Далее происходит итерация по массивам romanSymbols и romanValues с помощью цикла for. На каждой итерации проверяется, сколько раз текущее значение из romanValues может быть вычтено из введенного числа.
// Если текущее значение из romanValues может быть вычтено из числа, соответствующий ему римский символ добавляется к результату, а значение этого римского символа вычитается из числа.
// Этот процесс продолжается до тех пор, пока число не будет полностью преобразовано в римское представление.
// В конце метода возвращается результат в виде строки с помощью метода toString() объекта StringBuilder.
// Таким образом, программа принимает целое число от пользователя, проверяет его на соответствие допустимому диапазону, а затем преобразует его в римское представление, если число находится в допустимом диапазоне.


import java.util.Scanner;

public class ArabicToRoman {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.println("Введите целое число:"); // Приглашаем пользователя ввести целое число
        int number = scanner.nextInt(); // Считываем введенное число
        scanner.close();

        if (number >= 1 && number <= 3999) { // Проверяем, что введенное число находится в диапазоне от 1 до 3999 (максимальное значение в римской системе)
            String romanNumber = arabicToRoman(number); // Вызываем метод для перевода введенного числа в римский формат
            System.out.println("Римское число для введенного целого числа " + number + " = " + romanNumber); // Выводим результат
        } else {
            System.out.println("Введите число в диапазоне от 1 до 3999."); // Выводим предупреждение, если число не входит в указанный диапазон
        }
    }

    public static String arabicToRoman(int number) {
        // Определяем массивы символов римских чисел и их соответствующих числовых значений
        String[] romanSymbols = {"M", "CM", "D", "CD", "C", "XC", "L", "XL", "X", "IX", "V", "IV", "I"};
        int[] romanValues = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};

        StringBuilder result = new StringBuilder(); // Создаем объект StringBuilder для построения результата

        // Проходим по массивам символов и их значений
        for (int i = 0; i < romanValues.length; i++) {
            // Пока число больше или равно текущему значению римского символа
            while (number >= romanValues[i]) {
                result.append(romanSymbols[i]); // Добавляем римский символ в результат
                number -= romanValues[i]; // Вычитаем значение римского символа из числа
            }
        }

        return result.toString(); // Возвращаем результат в виде строки
    }
}
