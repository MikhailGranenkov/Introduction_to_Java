package Dz.Dz5;


// Напишите программу, представляющую телефонную книгу. Программа должна иметь следующие функции:

// add(String name, Integer phoneNum): Добавляет запись в телефонную книгу.
// Если запись с именем name уже существует, добавляет новый номер телефона в существующую запись.
// Если запись с именем name не существует, создает новую запись с этим именем и номером телефона phoneNum.

// find(String name): Поиск номеров телефона по имени в телефонной книге.
// Если запись с именем name существует, возвращает список номеров телефона для этой записи.
// Если запись с именем name не существует, возвращает пустой список.

// getPhoneBook(): Возвращает всю телефонную книгу в виде HashMap, где ключи - это имена, а значения - списки номеров телефона.

// Пример.

// На входе:

// add("Alice", 123456);   
// add("Alice", 789012);   
// add("Bob", 789012);   
// На выходе:

// Команды:

// find("Alice")
// getPhoneBook()
// find("Me")
// Результат:

// [123456, 789012]. 
// {Bob=[789012], Alice=[123456, 789012]} 
// []


// Импорт библиотек: В начале программы импортируются необходимые библиотеки ArrayList, HashMap, List и Map, которые понадобятся для работы с коллекциями.
// Описание класса PhoneBook:
// phoneBook: Это поле класса, представляющее телефонную книгу. Оно представлено как HashMap, где ключами являются имена контактов, а значениями - списки номеров телефонов.
// Метод add(String name, Integer phoneNum):
// Добавляет запись в телефонную книгу.
// Если запись с именем name уже существует, метод добавляет новый номер телефона в существующий список номеров этого контакта.
// Если запись с именем name не существует, создается новая запись с этим именем и новым номером телефона.
// Метод find(String name):
// Осуществляет поиск номеров телефона по имени в телефонной книге.
// Если запись с именем name существует, метод возвращает список номеров телефона для этой записи.
// Если запись с именем name не существует, метод возвращает пустой список.
// Метод getPhoneBook():
// Возвращает всю телефонную книгу в виде HashMap, где ключи - это имена, а значения - списки номеров телефона.
// Метод main:
// Создает экземпляр телефонной книги.
// Добавляет несколько записей в телефонную книгу.
// Выводит результаты поиска для нескольких имен и всю телефонную книгу.
// Таким образом, программа демонстрирует работу с телефонной книгой, позволяя добавлять записи, искать номера телефонов по именам и получать всю книгу в виде структуры данных.


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PhoneBook {
    // Храним телефонную книгу в виде HashMap, где ключи - это имена, а значения - списки номеров телефона
    private final Map<String, List<Integer>> phoneBook = new HashMap<>();

    // Метод add добавляет запись в телефонную книгу
    public void add(String name, Integer phoneNum) {
        // Получаем список номеров телефона для данного имени
        List<Integer> phoneNumbers = phoneBook.getOrDefault(name, new ArrayList<>());
        // Добавляем новый номер телефона
        phoneNumbers.add(phoneNum);
        // Обновляем запись в телефонной книге
        phoneBook.put(name, phoneNumbers);
    }

    // Метод find осуществляет поиск номеров телефона по имени в телефонной книге
    public List<Integer> find(String name) {
        // Получаем список номеров телефона для данного имени
        List<Integer> phoneNumbers = phoneBook.getOrDefault(name, new ArrayList<>());
        return phoneNumbers;
    }

    // Метод getPhoneBook возвращает всю телефонную книгу в виде HashMap
    public Map<String, List<Integer>> getPhoneBook() {
        return phoneBook;
    }

    public static void main(String[] args) {
        // Создаем экземпляр телефонной книги
        PhoneBook phoneBook = new PhoneBook();

        // Добавляем записи в телефонную книгу
        phoneBook.add("Alice", 123456);
        phoneBook.add("Alice", 789012);
        phoneBook.add("Bob", 789012);

        // Выводим результаты поиска и всю телефонную книгу
        System.out.println("Результат поиска для Alice: " + phoneBook.find("Alice"));
        System.out.println("Результат поиска для Bob: " + phoneBook.find("Bob"));
        System.out.println("Результат поиска для Me: " + phoneBook.find("Me"));
        System.out.println("Вся телефонная книга: " + phoneBook.getPhoneBook());
    }
}
