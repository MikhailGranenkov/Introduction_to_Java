package Java_lectures.Lecture6.part2;


// Код представляет класс Worker, который описывает работника. В этом классе определены четыре поля: id (идентификатор работника), salary (зарплата работника), firstName (имя работника) и lastName (фамилия работника).
// Метод toString(): Переопределенный метод, который возвращает строковое представление объекта Worker, включая его идентификатор, имя, фамилию и зарплату. Форматирование выполняется с использованием метода String.format().
// Метод equals(Object o): Переопределенный метод для сравнения двух объектов Worker. Он принимает в качестве аргумента объект o и проверяет, является ли он экземпляром класса Worker. Если это так, то производится сравнение идентификаторов и имен работников. Метод возвращает true, если идентификаторы и имена совпадают, и false в противном случае.
// Метод hashCode(): Переопределенный метод для вычисления хеш-кода объекта Worker. В данной реализации возвращается хеш-код по полю id, что предполагает, что идентификатор работника уникален и идентифицирует его объект.


public class Worker {
    int id; // Поле для хранения идентификатора работника
    int salary; // Поле для хранения зарплаты работника
    String firstName; // Поле для хранения имени работника
    String lastName; // Поле для хранения фамилии работника

    // Переопределение метода toString для вывода информации о работнике в виде строки
    @Override
    public String toString() {
        return String.format("%d %s %s %d", id, firstName, lastName, salary);
    }

    // Переопределение метода equals для сравнения двух объектов Worker
    @Override
    public boolean equals(Object o) {
        // Приведение объекта к типу Worker
        var t = (Worker) o;
        // Сравнение идентификаторов и имен работников
        return id == t.id && firstName.equals(t.firstName);
    }

    // Переопределение метода hashCode для вычисления хеш-кода объекта
    @Override
    public int hashCode() {
        return id; // Возвращается хеш-код по идентификатору работника
    }
}

