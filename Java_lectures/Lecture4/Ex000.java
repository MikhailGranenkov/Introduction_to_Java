package Java_lectures.Lecture4;


// Этот код на Java создает приоритетную очередь (PriorityQueue) для хранения целочисленных значений. Затем в очередь добавляются несколько элементов: 123, 3, 13 и 1. После этого каждый элемент извлекается из очереди с помощью метода poll() и выводится на консоль.

// Приоритетная очередь автоматически упорядочивает элементы в порядке возрастания (минимальное значение находится в голове очереди). Поэтому при выводе на консоль элементы будут отображаться в возрастающем порядке: сначала будет выведено наименьшее значение, затем следующее по величине и так далее. Если очередь пуста, метод poll() вернет значение null.

// Результатом выполнения данного кода будет последовательный вывод значений элементов очереди в порядке возрастания (1, 3, 13, 123) на первых четырех итерациях цикла poll(), а на последней итерации будет выведено null, так как очередь станет пустой.


import java.util.PriorityQueue;

public class Ex000 {
    public static void main(String[] args) {
        PriorityQueue<Integer> pq = new PriorityQueue<Integer>();
        pq.add(123);
        pq.add(3);
        pq.add(13);
        pq.add(1);
        System.out.println(pq);
        System.out.println(pq.poll());
        System.out.println(pq.poll());
        System.out.println(pq.poll());
        System.out.println(pq.poll());
        System.out.println(pq.poll());
       

    }
}

